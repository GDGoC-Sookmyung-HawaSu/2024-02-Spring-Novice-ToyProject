{{>layout/header}}

<h1>게시글 수정</h1>

<div class="col-md-12">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="id">글 번호</label>
                <input type="text" class="form-control" id="id" value="{{post.id}}" readonly>
            </div>
            <div class="form-group">
                <label for="title">제목</label>
                <input type="text" class="form-control" id="title" value="{{post.title}}" {{^isAuthor}}readonly{{/isAuthor}}>
            </div>
            <div class="form-group">
                <label for="author">작성자</label>
                <input type="text" class="form-control" id="author" value="{{post.author}}" readonly>
            </div>
            <div class="form-group">
                <label for="content">내용</label>
                <textarea class="form-control" id="content" {{^isAuthor}}readonly{{/isAuthor}}>{{post.content}}</textarea>
            </div>
        </form>
        <a href="/" role="button" class="btn btn-secondary">취소</a>
        {{#isAuthor}}
            <button type="button" class="btn btn-primary" id="btn-update">수정 완료</button>
            <button type="button" class="btn btn-danger" id="btn-delete">삭제</button>
        {{/isAuthor}}
        {{^isAuthor}}
            <p class="text-danger">본인만 수정 및 삭제할 수 있습니다.</p>
        {{/isAuthor}}
    </div>
</div>

<script>
    document.getElementById('btn-update')?.addEventListener('click', async () => {
        const id = document.getElementById('id').value;
        const title = document.getElementById('title').value;
        const content = document.getElementById('content').value;

        try {
            const response = await fetch(`/api/v1/posts/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ title, content }),
            });

            if (!response.ok) {
                throw new Error('수정 권한이 없습니다.');
            }

            alert('수정이 완료되었습니다.');
            location.href = '/';
        } catch (error) {
            alert(error.message);
        }
    });

    document.getElementById('btn-delete')?.addEventListener('click', async () => {
        const id = document.getElementById('id').value;

        try {
            const response = await fetch(`/api/v1/posts/${id}`, { method: 'DELETE' });
            alert('삭제가 완료되었습니다.');
            location.href = '/';
        } catch (error) {
            alert(error.message);
        }
    });
</script>

{{>layout/footer}}